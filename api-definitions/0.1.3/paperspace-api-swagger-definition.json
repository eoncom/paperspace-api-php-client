{
  "swagger": "2.0",
  "info": {
    "description": "Inofficial Swagger representation of the [Paperspace REST API](https://paperspace.github.io/paperspace-node/), provided by the [GamingSolved Paperspace API PHP Client project](https://github.com/gamingsolved/paperspace-api-php-client).",
    "version": "0.1.3",
    "title": "Paperspace REST API",
    "termsOfService": "https://github.com/Paperspace/paperspace-node#disclaimer",
    "license": {
      "name": "ISC License (for the official API)",
      "url": "https://raw.githubusercontent.com/Paperspace/paperspace-node/master/LICENSE.txt"
    },
    "contact": {
      "name": "GamingSolved Paperspace API PHP Client project",
      "url": "https://github.com/gamingsolved/paperspace-api-php-client",
      "email": "info@gamingsolved.com"
    }
  },
  "externalDocs": {
    "description": "Official API documentation",
    "url": "https://paperspace.github.io/paperspace-node/"
  },
  "host": "api.paperspace.io",
  "basePath": "/",
  "tags": [
    {
      "name": "machines",
      "description": "Manage Paperspace virtual machines"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-Key"
    }
  },
  "security": [
    {
      "APIKeyHeader": []
    }
  ],
  "paths": {
    "/machines/createSingleMachinePublic": {
      "post": {
        "operationId": "createMachine",
        "tags": [
          "machines"
        ],
        "summary": "Create and launch a new Paperspace virtual machine",
        "description": "Create a new Paperspace virtual machine. If you are using an individual account, you will be assigned as the owner of the machine. If you are a team administrator, you must specify who the machine should belong to, either by their user id, or their email address. If you pass a full set of user parameters, we will create a user within your team and assign them the machine. This action can only be performed by the account owner. (Team members cannot create machines themselves; only the team administrator may do so.)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CreateMachineParams",
            "description": "Machine creation parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMachineParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          }
        }
      }
    },
    "/machines/getMachines": {
      "get": {
        "operationId": "listMachines",
        "tags": [
          "machines"
        ],
        "summary": "List information about all machines available",
        "description": "List information about all machines available to either the current authenticated user or the team, if the user belongs to a team. Takes an optional argument to limit the returned machine objects.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ListMachinesParams",
            "description": "An optional filter object to limit the returned machine objects",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ListMachinesParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Machine"
              }
            }
          }
        }
      }
    },
    "/machines/getMachinePublic": {
      "get": {
        "operationId": "showMachine",
        "tags": [
          "machines"
        ],
        "summary": "Show machine information",
        "description": "Show machine information for the machine with the given id.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "machineId",
            "description": "Id of the machine to show",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Machine"
              }
            }
          }
        }
      }
    },
    "/machines/{machineId}/destroyMachine": {
      "post": {
        "operationId": "destroyMachine",
        "tags": [
          "machines"
        ],
        "summary": "Destroy a machine",
        "description": "Destroy the machine with the given id. When this action is performed, the machine is immediately shut down and marked for deletion from the datacenter. Any snapshots that were derived from the machine are also deleted. Access to the machine is terminated immediately and billing for the machine is prorated to the hour. This action can only be performed by the user who owns the machine, or in the case of a team, the team administrator.",
        "parameters": [
          {
            "in": "path",
            "name": "machineId",
            "description": "The id of the machine to destroy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Machine not found"
          }
        }
      }
    },
    "/machines/{machineId}/restart": {
      "post": {
        "operationId": "restartMachine",
        "tags": [
          "machines"
        ],
        "summary": "Restart an individual machine",
        "description": "Restart an individual machine. If the machine is already restarting, this action will request the machine be restarted again. This action can only be performed by the user who owns the machine.",
        "parameters": [
          {
            "in": "path",
            "name": "machineId",
            "description": "The id of the machine to restart",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Machine not found"
          }
        }
      }
    },
    "/machines/{machineId}/stop": {
      "post": {
        "operationId": "stopMachine",
        "tags": [
          "machines"
        ],
        "summary": "Stop an individual machine",
        "description": "Stop an individual machine. If the machine is already stopped or has been shut down, this action is a no-op. If the machine is running, it will be stopped and any users logged in will be immediately kicked out. This action can only be performed by the user who owns the machine.",
        "parameters": [
          {
            "in": "path",
            "name": "machineId",
            "description": "The id of the machine to shut down",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Machine not found"
          }
        }
      }
    },
    "/machines/{machineId}/start": {
      "post": {
        "operationId": "startMachine",
        "tags": [
          "machines"
        ],
        "summary": "Start up an individual machine",
        "description": "Start up an individual machine. If the machine is already started, this action is a no-op. If the machine is off, it will be booted up. This action can only be performed by the user who owns the machine.",
        "parameters": [
          {
            "in": "path",
            "name": "machineId",
            "description": "The id of the machine to start",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Machine not found"
          }
        }
      }
    },
    "/templates/getTemplates": {
      "get": {
        "operationId": "listTemplates",
        "tags": [
          "templates"
        ],
        "summary": "List information about all templates available",
        "description": "List information about all templates available to either the current authenticated user or the team, if the user belongs to a team. Takes an optional argument to limit the returned template objects.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ListTemplatesParams",
            "description": "An optional filter object to limit the returned template objects",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ListTemplatesParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Template"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Machine": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "",
          "example": "ps123abc"
        },
        "name": {
          "type": "string",
          "description": "",
          "example": "My Machine 1"
        },
        "os": {
          "type": "string",
          "description": "",
          "example": "Microsoft Windows Server 2016 Datacenter"
        },
        "ram": {
          "type": "integer",
          "format": "int32",
          "description": "",
          "example": "8589938688"
        },
        "cpus": {
          "type": "integer",
          "format": "int32",
          "description": "",
          "example": 4
        },
        "gpu": {
          "type": "string",
          "description": "",
          "example": "GRID K160Q (2GB)"
        },
        "storageTotal": {
          "type": "integer",
          "format": "int32",
          "description": "",
          "example": "53687091200"
        },
        "storageUsed": {
          "type": "integer",
          "format": "int32",
          "description": "",
          "example": "110080"
        },
        "usageRate": {
          "type": "string",
          "description": "",
          "example": "Air hourly"
        },
        "shutdownTimeoutInHours": {
          "type": "integer",
          "format": "int32",
          "description": "",
          "example": 24
        },
        "shutdownTimeoutForces": {
          "type": "boolean",
          "description": "",
          "example": false
        },
        "performAutoSnapshot": {
          "type": "boolean",
          "description": "",
          "example": false
        },
        "autoSnapshotFrequency": {
          "type": "integer",
          "format": "int32",
          "description": "",
          "example": null
        },
        "autoSnapshotSaveCount": {
          "type": "integer",
          "format": "int32",
          "description": "",
          "example": null
        },
        "agentType": {
          "type": "string",
          "description": "",
          "example": "WindowsDesktop"
        },
        "dtCreated": {
          "type": "string",
          "format": "datetime",
          "description": "",
          "example": "2017-02-16T20:26:54.880Z"
        },
        "state": {
          "type": "string",
          "enum": [
            "ready",
            "provisioning",
            "off"
          ],
          "description": "",
          "example": "provisioning"
        },
        "networkId": {
          "type": "string",
          "description": "",
          "example": "n789ghi"
        },
        "privateIpAddress": {
          "type": "string",
          "description": "",
          "example": "10.64.21.47"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "",
          "example": "169.255.255.254"
        },
        "region": {
          "type": "string",
          "description": "",
          "example": "East Coast (NY2)",
          "enum": [
            "East Coast (NY2)",
            "West Coast (CA1)"
          ]
        },
        "userId": {
          "type": "string",
          "description": "",
          "example": "u123abc"
        },
        "teamId": {
          "type": "string",
          "description": "",
          "example": "te456def"
        },
        "scriptId": {
          "type": "string",
          "description": "",
          "example": "sc123abc"
        },
        "dtLastRun": {
          "type": "string",
          "description": "",
          "example": "2017-06-30T07:22:49.763Z"
        }
      }
    },
    "Template": {
      "type": "object",
      "required": [
        "id",
        "name",
        "label",
        "os",
        "dtCreated"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "",
          "example": "t123abc"
        },
        "name": {
          "type": "string",
          "description": "",
          "example": "paperspace/t123abc"
        },
        "label": {
          "type": "string",
          "description": "",
          "example": "Windows 10"
        },
        "os": {
          "type": "string",
          "description": "",
          "example": "Windows 10 (Server 2016)"
        },
        "dtCreated": {
          "type": "string",
          "description": "",
          "example": "2017-01-03T23:41:06.801Z"
        },
        "teamId": {
          "type": "string",
          "description": "Only for team-owned templates",
          "example": "te456def"
        },
        "userId": {
          "type": "string",
          "description": "Only for team-owned templates",
          "example": null
        },
        "region": {
          "type": "string",
          "description": "Only for team-owned templates",
          "example": "East Coast (NY2)"
        }
      }
    },
    "CreateMachineParams": {
      "type": "object",
      "required": [
        "region",
        "machineType",
        "size",
        "billingType",
        "machineName",
        "templateId"
      ],
      "properties": {
        "region": {
          "type": "string",
          "description": "Name of the region",
          "enum": [
            "East Coast (NY2)",
            "West Coast (CA1)"
          ]
        },
        "machineType": {
          "type": "string",
          "enum": [
            "Air",
            "Standard",
            "Pro",
            "Advanced",
            "GPU+",
            "P5000",
            "C1",
            "C2",
            "C3",
            "C4",
            "C5",
            "C6",
            "C7",
            "C8",
            "C9",
            "C10"
          ]
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "Storage size for the machine in GB",
          "example": 50
        },
        "billingType": {
          "type": "string",
          "description": "Either 'monthly' or 'hourly' billing",
          "enum": [
            "hourly",
            "monthly"
          ]
        },
        "machineName": {
          "type": "string",
          "description": "A memorable name for this machine",
          "example": "My Machine 1"
        },
        "templateId": {
          "type": "string",
          "description": "Template id of the template to use for creating this machine",
          "example": "t123abc"
        },
        "assignPublicIp": {
          "type": "boolean",
          "description": "Assign a new public ip address on machine creation",
          "example": true
        },
        "networkId": {
          "type": "string",
          "description": "If creating on a specific network, specify its id",
          "example": "n123abc"
        },
        "teamId": {
          "type": "string",
          "description": "If creating the machine for a team, specify the team id",
          "example": "te456def"
        },
        "userId": {
          "type": "string",
          "description": "If assigning to an existing user other than yourself, specify the user id",
          "example": "u123abc"
        },
        "email": {
          "type": "string",
          "description": "If creating a new user for this machine, specify their email address",
          "example": "example@example.com"
        },
        "password": {
          "type": "string",
          "description": "If creating a new user, specify their password",
          "example": "secret123"
        },
        "firstName": {
          "type": "string",
          "description": "If creating a new user, specify their first name",
          "example": "Jon"
        },
        "lastName": {
          "type": "string",
          "description": "If creating a new user, specify their last name",
          "example": "Snow"
        },
        "notificationEmail": {
          "type": "string",
          "description": "Send a notification to this email address when complete",
          "example": "example@example.com"
        },
        "scriptId": {
          "type": "string",
          "description": "The script id of a script to be run on startup",
          "example": "sc123abc"
        }
      }
    },
    "ListMachinesParams": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "Optional machine id to match on"
        },
        "name": {
          "type": "string",
          "description": "Optional name to match on"
        },
        "os": {
          "type": "string",
          "description": "Optional os to match on"
        },
        "ram": {
          "type": "string",
          "description": "Optional ram value to match on"
        },
        "cpus": {
          "type": "integer",
          "format": "int32",
          "description": "Optional cpu count to match on"
        },
        "gpu": {
          "type": "string",
          "description": "Optional gpu to match on"
        },
        "storageTotal": {
          "type": "string",
          "description": "Optional storageTotal value to match on"
        },
        "storageUsed": {
          "type": "string",
          "description": "Optional storageUsed value to match on"
        },
        "usageRate": {
          "type": "string",
          "description": "Optional usageRate value to match on"
        },
        "shutdownTimeoutInHours": {
          "type": "integer",
          "format": "int32",
          "description": "Optional shutdownTimeoutInHours value to match on"
        },
        "performAutoSnapshot": {
          "type": "boolean",
          "description": "Optional performAutoSnapshot value to match on, either true or false"
        },
        "autoSnapshotFrequency": {
          "type": "string",
          "description": "Optional autoSnapshotFrequency value to match on"
        },
        "autoSnapshotSaveCount": {
          "type": "integer",
          "format": "int32",
          "description": "Optional autoSnapshotSaveCount value to match on"
        },
        "agentType": {
          "type": "string",
          "description": "Optional agentType value to match on"
        },
        "dtCreated": {
          "type": "string",
          "description": "Optional datatime value to match on",
          "example": "2017-02-16T20:26:54.880Z"
        },
        "state": {
          "type": "string",
          "description": "Optional state value to match on"
        },
        "networkId": {
          "type": "string",
          "description": "Optional networkId value to match on"
        },
        "privateIpAddress": {
          "type": "string",
          "description": "Optional privateIpAddress value to match on"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Optional publicIpAddress value to match on"
        },
        "region": {
          "type": "string",
          "description": "Optional region value to match on"
        },
        "userId": {
          "type": "string",
          "description": "Optional userId value to match on"
        },
        "teamId": {
          "type": "string",
          "description": "Optional teamId value to match on"
        },
        "scriptId": {
          "type": "string",
          "description": "Optional scriptId value to match on"
        },
        "dtLastRun": {
          "type": "string",
          "description": "Optional script datatime last run value to match on",
          "example": "2017-02-16T20:26:54.880Z"
        }
      }
    },
    "ListTemplatesParams": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Optional template id to match on"
        },
        "name": {
          "type": "string",
          "description": "Optional name to match on"
        },
        "label": {
          "type": "string",
          "description": "Optional label to match on"
        },
        "os": {
          "type": "string",
          "description": "Optional os to match on"
        },
        "dtCreated": {
          "type": "string",
          "description": "Optional datatime created value to match on",
          "example": "2017-02-16T20:26:54.880Z"
        },
        "teamId": {
          "type": "string",
          "description": "Optional teamId to match on"
        },
        "userId": {
          "type": "string",
          "description": "Optional userId to match on"
        },
        "region": {
          "type": "string",
          "description": "Optional region to match on"
        }
      }
    }
  }
}
